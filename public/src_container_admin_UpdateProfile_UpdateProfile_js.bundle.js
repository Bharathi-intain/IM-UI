/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkwsfs"] = self["webpackChunkwsfs"] || []).push([["src_container_admin_UpdateProfile_UpdateProfile_js"],{

/***/ "./src/container/admin/UpdateProfile/UpdateProfile.js":
/*!************************************************************!*\
  !*** ./src/container/admin/UpdateProfile/UpdateProfile.js ***!
  \************************************************************/
/***/ (() => {

eval("// /* eslint-disable max-len */\n// /* eslint-disable require-jsdoc */\n// import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button';\n// import FormLoader from '../../../components/formLoader';\n// import { withTheme } from 'react-jsonschema-form';\n// import { Theme as MuiTheme } from 'rjsf-material-ui';\n// import LinkItem from '../../../components/linkItem';\n// import { CustomFieldTemplate, widgets } from '../../../components/customscripts/customscript';\n// import { withSnackbar } from 'notistack';\n\n// import { addUser, authenticate, updateUser } from '../../../servies/services';\n\n// const Form = withTheme(MuiTheme);\n// const schema = require('./schema.json');\n// const uiSchema = {\n\n//   'password': {\n//     'ui:widget': 'password',\n//   },\n//   \"emailid\": {\n//     \"ui:autofocus\": false,\n//     \"ui:emptyValue\": \"\",\n//     \"ui:autocomplete\": false,\n//     \"ui:readonly\": true\n//   },\n//   \"userrole\": {\n//     \"ui:autofocus\": false,\n//     \"ui:emptyValue\": \"\",\n//     \"ui:autocomplete\": false,\n//     \"ui:readonly\": true\n//   }\n\n// };\n\n// class UpdateProfile extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       schema: schema,\n//       uiSchema: uiSchema,\n//       formData: {},\n//       UserId: '',\n//     };\n//   }\n\n//   onSubmit = async (value) => {\n//     console.log('onSubmit:', value.formData)\n//     let data = value.formData;\n//     data.userid = this.state.UserId\n//     // this.setState({ loading: true })\n//     const APIResponse = await updateUser(data)\n//     console.log(\"authenticate\", APIResponse)\n//     if (APIResponse !== null) {\n\n//       this.setState({ loading: false })\n//       if (APIResponse.status !== 200) {\n\n//         const message = \"Something went wrong, please try again\";\n//         this.props.enqueueSnackbar(message, {\n//           variant: 'error',\n//           autoHideDuration: 5000,\n//         });\n\n//       }\n//       else {\n\n//         if (APIResponse.data.Success == false) {\n\n//           this.setState({ formLoader: false })\n//           const message = \"Profile Update unsucessful\";\n//           this.props.enqueueSnackbar(message, {\n//             variant: 'error',\n//             autoHideDuration: 2000,\n//           });\n\n//         } else {\n\n//     //       // console.log(\"data.data\", APIResponse.data.data)\n//     //       // console.log(\"APIResponse.data.data.UserName\", APIResponse.data.data.UserName)\n\n//           this.setState({ formLoader: false })\n//           const message = \"Profile Updated Successfully\";\n//           this.props.enqueueSnackbar(message, {\n//             variant: 'info',\n//             autoHideDuration: 2000,\n//           });\n//         }\n//       }\n//     }\n//   }\n//   async componentDidMount() {\n\n//     let search = this.props.location.search;\n//     let params = new URLSearchParams(search);\n//     // let UserName = params.get('UserName');\n//     // let OrgName = params.get('OrgName');\n//     let UserId = params.get('userid');\n//     let Email = params.get('Email');\n//     this.setState({UserId:UserId});\n//     // alert(UserId)\n//     const formData = {\n//       // \"username\": UserName,\n//       \"emailid\" : Email,\n//     }\n\n//     this.setState({ formData: formData})\n\n//   }\n\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <h4>Complete your profile to access Intain ABS</h4>\n//         <div className=\"form_row_single\">\n//           {/* {JSON.stringify(this.state.formData)} */}\n//           <Form\n//             schema={this.state.schema}\n//             onChange={this.onFormChanged}\n//             onSubmit={this.onSubmit}\n//             widgets={widgets}\n//             FieldTemplate={CustomFieldTemplate}\n//             uiSchema={this.state.uiSchema}\n//             formData={this.state.formData}\n\n//           >\n//             <div id=\"form-btn\">\n//               <div className=\"container-fluid text-center\">\n//                 <div className=\"row\">\n//                   <Button className=\"col-md-12\" variant=\"contained\" size=\"large\" color=\"primary\" id=\"signinbutton\" type=\"submit\"\n//                     disabled={this.state.loading === true ? true : false} > Update Profile </Button>\n//                 </div>\n//               </div>\n//             </div>\n//           </Form>\n//           <div className=\"loginCheckbox\">\n//             <p className=\"lineDivider\">\n//               <span>Have Account?</span>\n//             </p>\n//             <LinkItem to={'/'} variant=\"contained\" className=\"loginBtn\" title={'Login'}> </LinkItem>\n//           </div>\n//         </div>\n//       </React.Fragment>\n//     );\n//   }\n// }\n// export default withSnackbar(UpdateProfile);\n\n//# sourceURL=webpack://wsfs/./src/container/admin/UpdateProfile/UpdateProfile.js?");

/***/ })

}]);